sap.ui.define(["sap/ui/core/mvc/Controller","sap/m/MessageToast","sap/ui/model/json/JSONModel","sap/ui/model/Filter","sap/ui/model/FilterOperator","sap/ui/core/BusyIndicator"],function(e,t,n,o,s,i){"use strict";return e.extend("project1.controller.View1",{onInit:function(){const e=new n([]);this.getView().setModel(e,"attachmentModel");this._fetchVendors();setInterval(()=>{this._fetchVendors()},1e4)},_fetchVendors:function(){fetch("odata/v4/vendor/Vendors").then(e=>e.json()).then(e=>{const t=new n(e.value);this.getView().setModel(t,"VendModel")}).catch(e=>{console.error("Failed to fetch vendors:",e)})},onVendorSelect:function(e){const t=e.getParameter("listItem").getBindingContext("VendModel").getProperty("ID");const n=sap.ui.core.UIComponent.getRouterFor(this);n.navTo("View2",{vendor_Id:t})},onFileChange:function(e){this.selectedFiles=e.getParameter("files");console.log(this.selectedFiles)},getCSRFToken:async function(e){const t=await fetch(e,{method:"GET",headers:{"X-CSRF-Token":"Fetch"}});return t.headers.get("x-csrf-token")},_isValidEmail:function(e){const t=/^[^\s@]+@[^\s@]+\.[^\s@]+$/;return t.test(e)},_isValidPhone:function(e){const t=/^\d{10}$/;return t.test(e)},onSubmit:async function(){const e=this.byId("idInput").getValue();const n=this.byId("nameInput").getValue();const o=this.byId("emailInput").getValue();const s=this.byId("phoneInput").getValue();if(!n||!o||!s||!e||!this.selectedFiles||this.selectedFiles.length===0){t.show("Please fill in all vendor details and upload at least one file.");return}if(!this._isValidEmail(o)){t.show("Please enter a valid email address.");return}if(!this._isValidPhone(s)){t.show("Please enter a valid 10-digit phone number.");return}try{i.show(0);const a={ID:e,name:n,email:o,phone:s};const l=await this.getCSRFToken("odata/v4/vendor/");const r=await fetch("odata/v4/vendor/VendorCreation",{method:"POST",headers:{"Content-Type":"application/json","X-CSRF-Token":l},body:JSON.stringify(a)});if(!r.ok)throw new Error("Vendor creation failed: "+await r.text());for(let t=0;t<this.selectedFiles.length;t++){const n=this.selectedFiles[t];const o=new FormData;o.append("file",n);o.append("vendorID",e);const s=await fetch("uploadPDF",{method:"POST",body:o});if(!s.ok){throw new Error(`Failed to upload file: ${n.name}`)}}t.show("Vendor and file uploaded successfully.");this.onInit();this.byId("idInput").setValue("");this.byId("nameInput").setValue("");this.byId("emailInput").setValue("");this.byId("phoneInput").setValue("");this.byId("fileUploader").clear();this.selectedFiles=null}catch(e){console.error("Error:",e);t.show("Error occurred during vendor or file upload.")}finally{i.hide()}},onFilter:function(){const e=this.byId("vendorTable");const t=e.getBinding("items");const n=this.byId("vendorIdFilter").getValue();const i=this.byId("vendorNameFilter").getValue();const a=this.byId("statusFilter").getValue();const l=[];if(n)l.push(new o("ID",s.Contains,n));if(i)l.push(new o("name",s.Contains,i));if(a)l.push(new o("status",s.Contains,a));t.filter(l)}})});
//# sourceMappingURL=View1.controller.js.map